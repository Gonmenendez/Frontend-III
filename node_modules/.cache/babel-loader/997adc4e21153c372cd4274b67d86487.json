{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GNMO\\\\Desktop\\\\Certified Tech Developer\\\\6\\xB0 Bimestre\\\\Frontend III\\\\Entregable\\\\entregable-frontend-3-junio22\\\\src\\\\components\\\\Item.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nexport default function Item(_ref) {\n  let {\n    e,\n    setCounter,\n    counter\n  } = _ref;\n\n  const sumar = function () {\n    if (e.stock > 0) {\n      e.stock = e.stock - 1;\n      setCounter(counter = counter + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: e.producto.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: e.producto.descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"En stock: \", e.stock > 0 ? e.stock : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"agotado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 47\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), e.stock > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sumar,\n        children: \"Comprar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Sin Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["Item","e","setCounter","counter","sumar","stock","producto","nombre","descripcion"],"sources":["C:/Users/GNMO/Desktop/Certified Tech Developer/6° Bimestre/Frontend III/Entregable/entregable-frontend-3-junio22/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nexport default function Item({e, setCounter, counter}) {\r\n\r\n  const sumar = function (){\r\n    if (e.stock > 0){\r\n      e.stock = e.stock - 1\r\n      setCounter(counter = counter + 1)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='producto'>\r\n      <section>\r\n        <h3>{e.producto.nombre}</h3>\r\n        <br/>\r\n        <p>{e.producto.descripcion}</p>\r\n        <br/>\r\n        <h5>En stock: {e.stock > 0 ? e.stock: <span>agotado</span>} </h5>\r\n        <br/>\r\n        {e.stock > 0 ? <button onClick={sumar}>Comprar</button> : <button disabled>Sin Stock</button>}\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,SAASA,IAAT,OAAwC;EAAA,IAA1B;IAACC,CAAD;IAAIC,UAAJ;IAAgBC;EAAhB,CAA0B;;EAErD,MAAMC,KAAK,GAAG,YAAW;IACvB,IAAIH,CAAC,CAACI,KAAF,GAAU,CAAd,EAAgB;MACdJ,CAAC,CAACI,KAAF,GAAUJ,CAAC,CAACI,KAAF,GAAU,CAApB;MACAH,UAAU,CAACC,OAAO,GAAGA,OAAO,GAAG,CAArB,CAAV;IACD;EACF,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,uBACE;MAAA,wBACE;QAAA,UAAKF,CAAC,CAACK,QAAF,CAAWC;MAAhB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,UAAIN,CAAC,CAACK,QAAF,CAAWE;MAAf;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA,yBAAeP,CAAC,CAACI,KAAF,GAAU,CAAV,GAAcJ,CAAC,CAACI,KAAhB,gBAAuB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAtC;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAA;QAAA;QAAA;MAAA,QANF,EAOGJ,CAAC,CAACI,KAAF,GAAU,CAAV,gBAAc;QAAQ,OAAO,EAAED,KAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAd,gBAAyD;QAAQ,QAAQ,MAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAP5D;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;KAtBuBJ,I"},"metadata":{},"sourceType":"module"}